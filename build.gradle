buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'io.sentry.jvm.gradle' version '4.5.1'
}

group = 'com.guttery'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.1.2'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// AWS S3, CloudWatch
	implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.0.2'
	implementation 'ca.pjer:logback-awslogs-appender:1.6.0'

	// OpenFeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.3'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// Flyway
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	//annotationProcessor "io.github.mingeun0507:querydsl-apt-for-records:5.0.0.M1"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// json
	implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.1'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// DB
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	implementation "org.springframework.boot:spring-boot-starter-data-mongodb"

	// Firebase
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	// Sentry
	implementation 'io.sentry:sentry-jdbc:6.29.0'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

def generated = file("$buildDir/generated/querydsl")

sourceSets {
	main {
		java {
			srcDirs += generated
		}
	}
}

task createGeneratedDir {
	doLast {
		if (!generated.exists()) {
			generated.mkdirs()
		}
	}
}

tasks.withType(JavaCompile) {
	dependsOn createGeneratedDir
	options.annotationProcessorGeneratedSourcesDirectory = generated
}

clean {
	delete file(generated)
}

sentry {
	includeSourceContext = true
	org = "9uttery"
	projectName = "madii"
	authToken = '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'
}

tasks.named('sentryCollectSourcesJava').configure {
	dependsOn compileJava, compileTestJava
}

tasks.named('generateSentryBundleIdJava').configure {
	dependsOn compileJava
}
